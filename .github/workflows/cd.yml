name: Continuous Deployment

on:
   push:
      branches:
         - feat/rafael/zero-downtime-cd

jobs:
   deploy:
      name: Deploy to Server
      runs-on: self-hosted
      timeout-minutes: 30
      steps:
         - name: Checkout Code
           uses: actions/checkout@v3
           with:
              fetch-depth: 0

         - name: Generate Version
           id: version
           run: |
              VERSION=$(git rev-parse --short HEAD)
              echo "version=$VERSION" >> $GITHUB_OUTPUT

         - name: Set .env from secrets
           run: |
              if [ -n "${{ secrets.ENV_PROD }}" ]; then
                echo "${{ secrets.ENV_PROD }}" > .env
              else
                echo "Error: ENV_PROD secret is not configured"
                exit 1
              fi

         - name: Build New Docker Image
           run: |
              docker build -t descier-app-image:${{ steps.version.outputs.version }} .
              docker tag descier-app-image:${{ steps.version.outputs.version }} descier-app-image:latest
           timeout-minutes: 20

         - name: Start New Instance
           run: |
              NEW_VERSION=${{ steps.version.outputs.version }}
              NEW_CONTAINER="descier-app-new"

              docker network ls | grep -q descier-network || docker network create descier-network

              docker run -d \
                --name "$NEW_CONTAINER" \
                --network descier-network \
                -p 3001:3000 \
                -e NODE_ENV=production \
                -e HOST=0.0.0.0 \
                -e PORT=3000 \
                --restart unless-stopped \
                descier-app-image:$NEW_VERSION

         - name: Health Check
           run: |
              RETRY_COUNT=0
              MAX_RETRIES=20

              while [ $RETRY_COUNT -lt $MAX_RETRIES ]; do
                HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3001 || echo "000")
                
                if [ "$HTTP_CODE" = "200" ] || [ "$HTTP_CODE" = "301" ] || [ "$HTTP_CODE" = "302" ]; then
                  break
                elif [ $RETRY_COUNT -eq $((MAX_RETRIES - 1)) ]; then
                  docker stop descier-app-new && docker rm descier-app-new
                  exit 1
                else
                  sleep 15
                  RETRY_COUNT=$((RETRY_COUNT + 1))
                fi
              done

         - name: Switch Traffic
           run: |
              OLD_CONTAINER=$(docker ps --filter "name=descier-app-current" --format "{{.Names}}" | head -1)
              if [ -n "$OLD_CONTAINER" ]; then
                docker stop "$OLD_CONTAINER"
                docker rm "$OLD_CONTAINER"
              fi

              docker stop descier-app-new
              docker run -d \
                --name "descier-app-current" \
                --network descier-network \
                -p 3000:3000 \
                -e NODE_ENV=production \
                -e HOST=0.0.0.0 \
                -e PORT=3000 \
                --restart unless-stopped \
                descier-app-image:${{ steps.version.outputs.version }}

              docker rm descier-app-new

         - name: Verify Deployment
           run: |
              sleep 10
              HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000 || echo "000")
              if [ "$HTTP_CODE" != "200" ] && [ "$HTTP_CODE" != "301" ] && [ "$HTTP_CODE" != "302" ]; then
                exit 1
              fi

         - name: Cleanup Old Images
           run: docker image prune -f 2>/dev/null || true
