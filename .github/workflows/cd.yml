name: Continuous Deployment

on:
   push:
      branches:
         - develop
         - main

jobs:
   prepare:
      name: Prepare Repository
      runs-on: self-hosted
      timeout-minutes: 5
      outputs:
         branch: ${{ github.ref_name }}
      steps:
         - name: Checkout Code
           uses: actions/checkout@v3
           with:
              fetch-depth: 0

         - name: Pull Latest Code
           run: |
              git fetch --all
              git reset --hard origin/${{ github.ref_name }}
              git pull

         - name: Set .env
           run: |
              if [ -n "${{ secrets.ENV_PROD }}" ]; then
                echo "${{ secrets.ENV_PROD }}" > .env
                echo "env-set=true" >> $GITHUB_OUTPUT
              else
                echo "Error: ENV_PROD secret is not configured. Set it in Settings > Secrets and variables > Actions"
                exit 1
              fi

   deploy:
      name: Deploy to Server
      needs: prepare
      runs-on: self-hosted
      timeout-minutes: 30
      steps:
         - name: Stop existing containers
           run: |
              docker-compose down 2>/dev/null || echo "No containers to stop"
              docker stop $(docker ps -q --filter "ancestor=descier-app-image") 2>/dev/null || echo "No running containers"

         - name: Build Docker image
           run: |
              docker build --no-cache --build-arg ENV_FILE="$(cat .env)" -t descier-app-image:latest .
           timeout-minutes: 25

         - name: Start application with Docker
           run: |
              docker compose up -d

         - name: Verify Deployment
           run: |
              echo "Waiting for application to start..."
              sleep 15

              HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000 || echo "000")
              if [ "$HTTP_CODE" = "200" ] || [ "$HTTP_CODE" = "301" ] || [ "$HTTP_CODE" = "302" ]; then
                echo "Application is responding with status $HTTP_CODE"
              else
                echo "Application is not responding properly. Status: $HTTP_CODE"
                echo "Continuing anyway..."
              fi

         - name: Deployment Status
           run: |
              echo "Deployment completed for ${{ needs.prepare.outputs.branch }} at $(date)"
