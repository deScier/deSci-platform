name: Continuous Deployment

on:
   push:
      branches:
         - feat/rafael/ci-cd-vps
         - main

jobs:
   prepare:
      name: Prepare Repository
      runs-on: self-hosted
      timeout-minutes: 5
      outputs:
         branch: ${{ github.ref_name }}
      steps:
         - name: Checkout Code
           uses: actions/checkout@v3
           with:
              fetch-depth: 0

         - name: Pull Latest Code
           run: |
              git fetch --all
              git reset --hard origin/${{ github.ref_name }}
              git pull

         - name: Set .env
           run: |
              if [ -n "${{ secrets.ENV_PROD }}" ]; then
                echo "${{ secrets.ENV_PROD }}" > .env
                echo "env-set=true" >> $GITHUB_OUTPUT
              else
                echo "Error: ENV_PROD secret is not configured. Set it in Settings > Secrets and variables > Actions"
                exit 1
              fi

   build:
      name: Build Application
      needs: prepare
      runs-on: self-hosted
      timeout-minutes: 25
      steps:
         - name: Setup Node
           uses: actions/setup-node@v3
           with:
              node-version: 23

         - name: Setup pnpm
           uses: pnpm/action-setup@v2
           with:
              version: 8
              run_install: false

         - name: Clear caches
           run: |
              rm -rf .next
              rm -rf node_modules/.cache
              rm -rf node_modules

         - name: Install Dependencies
           run: pnpm install --no-frozen-lockfile
           timeout-minutes: 10

         - name: Build Application
           run: |
              export NODE_OPTIONS="--max-old-space-size=4096"
              pnpm run build
           timeout-minutes: 15

         - name: Cache build artifacts
           uses: actions/cache@v3
           with:
              path: |
                 .next
                 node_modules
              key: build-${{ github.sha }}
              restore-keys: |
                 build-

   deploy:
      name: Deploy to Server
      needs: build
      runs-on: self-hosted
      timeout-minutes: 5
      steps:
         - name: Restore build artifacts
           uses: actions/cache@v3
           with:
              path: |
                 .next
                 node_modules
              key: build-${{ github.sha }}

         - name: Kill processes in port 3000
           run: |
              sudo kill -9 $(sudo lsof -t -i:3000) || echo "No process to kill"

         - name: Restart Application
           run: |
              pm2 delete "deScier Platform" || echo "No process to delete"
              pm2 start --name "deScier Platform" pnpm -- start

         - name: Save PM2 process list
           run: pm2 save

         - name: Verify Deployment
           run: |
              echo "Waiting for application to start..."
              sleep 5

              HTTP_CODE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000 || echo "000")
              if [ "$HTTP_CODE" = "200" ] || [ "$HTTP_CODE" = "301" ] || [ "$HTTP_CODE" = "302" ]; then
                echo "Application is responding with status $HTTP_CODE"
              else
                echo "Application is not responding properly. Status: $HTTP_CODE"
                echo "Continuing anyway..."
              fi

         - name: Deployment Status
           run: |
              echo "Deployment completed for needs.prepare.outputs.branch at $(date)"
